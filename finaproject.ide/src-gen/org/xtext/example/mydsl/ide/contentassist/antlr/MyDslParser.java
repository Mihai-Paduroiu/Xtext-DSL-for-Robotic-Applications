/*
 * generated by Xtext 2.36.0-SNAPSHOT
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getCallbackAccess().getAlternatives(), "rule__Callback__Alternatives");
			builder.put(grammarAccess.getSystemTimerAccess().getAlternatives(), "rule__SystemTimer__Alternatives");
			builder.put(grammarAccess.getExecutorTypeAccess().getAlternatives(), "rule__ExecutorType__Alternatives");
			builder.put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
			builder.put(grammarAccess.getNodeAccess().getGroup(), "rule__Node__Group__0");
			builder.put(grammarAccess.getExecutorAccess().getGroup(), "rule__Executor__Group__0");
			builder.put(grammarAccess.getExecutorAccess().getGroup_5(), "rule__Executor__Group_5__0");
			builder.put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
			builder.put(grammarAccess.getServiceAccess().getGroup_2(), "rule__Service__Group_2__0");
			builder.put(grammarAccess.getServiceAccess().getGroup_3(), "rule__Service__Group_3__0");
			builder.put(grammarAccess.getServiceAccess().getGroup_4(), "rule__Service__Group_4__0");
			builder.put(grammarAccess.getServiceRequestAccess().getGroup(), "rule__ServiceRequest__Group__0");
			builder.put(grammarAccess.getServiceRequestAccess().getGroup_2(), "rule__ServiceRequest__Group_2__0");
			builder.put(grammarAccess.getTopicAccess().getGroup(), "rule__Topic__Group__0");
			builder.put(grammarAccess.getTopicAccess().getGroup_3(), "rule__Topic__Group_3__0");
			builder.put(grammarAccess.getTopicAccess().getGroup_4(), "rule__Topic__Group_4__0");
			builder.put(grammarAccess.getPublisherAccess().getGroup(), "rule__Publisher__Group__0");
			builder.put(grammarAccess.getPublisherAccess().getGroup_2(), "rule__Publisher__Group_2__0");
			builder.put(grammarAccess.getPublisherAccess().getGroup_3(), "rule__Publisher__Group_3__0");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getGroup(), "rule__SubscriberCallback__Group__0");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getGroup_5(), "rule__SubscriberCallback__Group_5__0");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getGroup_6(), "rule__SubscriberCallback__Group_6__0");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getGroup_7(), "rule__SubscriberCallback__Group_7__0");
			builder.put(grammarAccess.getServiceCallbackAccess().getGroup(), "rule__ServiceCallback__Group__0");
			builder.put(grammarAccess.getServiceCallbackAccess().getGroup_5(), "rule__ServiceCallback__Group_5__0");
			builder.put(grammarAccess.getServiceCallbackAccess().getGroup_6(), "rule__ServiceCallback__Group_6__0");
			builder.put(grammarAccess.getServiceCallbackAccess().getGroup_7(), "rule__ServiceCallback__Group_7__0");
			builder.put(grammarAccess.getClientCallbackAccess().getGroup(), "rule__ClientCallback__Group__0");
			builder.put(grammarAccess.getClientCallbackAccess().getGroup_5(), "rule__ClientCallback__Group_5__0");
			builder.put(grammarAccess.getClientCallbackAccess().getGroup_6(), "rule__ClientCallback__Group_6__0");
			builder.put(grammarAccess.getTimerCallbackAccess().getGroup(), "rule__TimerCallback__Group__0");
			builder.put(grammarAccess.getTimerCallbackAccess().getGroup_5(), "rule__TimerCallback__Group_5__0");
			builder.put(grammarAccess.getTimerCallbackAccess().getGroup_6(), "rule__TimerCallback__Group_6__0");
			builder.put(grammarAccess.getTimerCallbackAccess().getGroup_7(), "rule__TimerCallback__Group_7__0");
			builder.put(grammarAccess.getPeriodicTimerAccess().getGroup(), "rule__PeriodicTimer__Group__0");
			builder.put(grammarAccess.getWalltimerAccess().getGroup(), "rule__Walltimer__Group__0");
			builder.put(grammarAccess.getSystemModelAccess().getSystemsAssignment(), "rule__SystemModel__SystemsAssignment");
			builder.put(grammarAccess.getSystemAccess().getSystemNameAssignment_1(), "rule__System__SystemNameAssignment_1");
			builder.put(grammarAccess.getSystemAccess().getNodesAssignment_3(), "rule__System__NodesAssignment_3");
			builder.put(grammarAccess.getSystemAccess().getTopicsAssignment_4(), "rule__System__TopicsAssignment_4");
			builder.put(grammarAccess.getSystemAccess().getExecutorsAssignment_5(), "rule__System__ExecutorsAssignment_5");
			builder.put(grammarAccess.getSystemAccess().getServicesAssignment_6(), "rule__System__ServicesAssignment_6");
			builder.put(grammarAccess.getSystemAccess().getPeriodictimersAssignment_7(), "rule__System__PeriodictimersAssignment_7");
			builder.put(grammarAccess.getSystemAccess().getWalltimersAssignment_8(), "rule__System__WalltimersAssignment_8");
			builder.put(grammarAccess.getNodeAccess().getNodeNameAssignment_1(), "rule__Node__NodeNameAssignment_1");
			builder.put(grammarAccess.getNodeAccess().getPublishersAssignment_3(), "rule__Node__PublishersAssignment_3");
			builder.put(grammarAccess.getNodeAccess().getSubscribersAssignment_4(), "rule__Node__SubscribersAssignment_4");
			builder.put(grammarAccess.getNodeAccess().getServicesAssignment_5(), "rule__Node__ServicesAssignment_5");
			builder.put(grammarAccess.getNodeAccess().getServicerequestsAssignment_6(), "rule__Node__ServicerequestsAssignment_6");
			builder.put(grammarAccess.getNodeAccess().getClientsAssignment_7(), "rule__Node__ClientsAssignment_7");
			builder.put(grammarAccess.getNodeAccess().getTimersAssignment_8(), "rule__Node__TimersAssignment_8");
			builder.put(grammarAccess.getExecutorAccess().getNameAssignment_2(), "rule__Executor__NameAssignment_2");
			builder.put(grammarAccess.getExecutorAccess().getTypeAssignment_4(), "rule__Executor__TypeAssignment_4");
			builder.put(grammarAccess.getExecutorAccess().getExecutedAssignment_5_1(), "rule__Executor__ExecutedAssignment_5_1");
			builder.put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
			builder.put(grammarAccess.getServiceAccess().getServiceReqAssignment_2_1(), "rule__Service__ServiceReqAssignment_2_1");
			builder.put(grammarAccess.getServiceAccess().getClientCAllAssignment_3_1(), "rule__Service__ClientCAllAssignment_3_1");
			builder.put(grammarAccess.getServiceAccess().getServiceCAllAssignment_4_1(), "rule__Service__ServiceCAllAssignment_4_1");
			builder.put(grammarAccess.getServiceRequestAccess().getNameAssignment_1(), "rule__ServiceRequest__NameAssignment_1");
			builder.put(grammarAccess.getServiceRequestAccess().getServiceAssignment_2_1(), "rule__ServiceRequest__ServiceAssignment_2_1");
			builder.put(grammarAccess.getTopicAccess().getNameAssignment_2(), "rule__Topic__NameAssignment_2");
			builder.put(grammarAccess.getTopicAccess().getPublishedAssignment_3_1(), "rule__Topic__PublishedAssignment_3_1");
			builder.put(grammarAccess.getTopicAccess().getSubscribedAssignment_4_1(), "rule__Topic__SubscribedAssignment_4_1");
			builder.put(grammarAccess.getPublisherAccess().getNameAssignment_1(), "rule__Publisher__NameAssignment_1");
			builder.put(grammarAccess.getPublisherAccess().getPublishesAssignment_2_1(), "rule__Publisher__PublishesAssignment_2_1");
			builder.put(grammarAccess.getPublisherAccess().getBufferSizeAssignment_3_1(), "rule__Publisher__BufferSizeAssignment_3_1");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getBufferSizeAssignment_2(), "rule__SubscriberCallback__BufferSizeAssignment_2");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getNameAssignment_4(), "rule__SubscriberCallback__NameAssignment_4");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getSubscribesToAssignment_5_1(), "rule__SubscriberCallback__SubscribesToAssignment_5_1");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getExecutedInAssignment_6_1(), "rule__SubscriberCallback__ExecutedInAssignment_6_1");
			builder.put(grammarAccess.getSubscriberCallbackAccess().getExecutionTimeAssignment_7_1(), "rule__SubscriberCallback__ExecutionTimeAssignment_7_1");
			builder.put(grammarAccess.getServiceCallbackAccess().getBufferSizeAssignment_2(), "rule__ServiceCallback__BufferSizeAssignment_2");
			builder.put(grammarAccess.getServiceCallbackAccess().getNameAssignment_4(), "rule__ServiceCallback__NameAssignment_4");
			builder.put(grammarAccess.getServiceCallbackAccess().getServiceAssignment_5_1(), "rule__ServiceCallback__ServiceAssignment_5_1");
			builder.put(grammarAccess.getServiceCallbackAccess().getExecutedInAssignment_6_1(), "rule__ServiceCallback__ExecutedInAssignment_6_1");
			builder.put(grammarAccess.getServiceCallbackAccess().getExecutionTimeAssignment_7_1(), "rule__ServiceCallback__ExecutionTimeAssignment_7_1");
			builder.put(grammarAccess.getClientCallbackAccess().getBufferSizeAssignment_2(), "rule__ClientCallback__BufferSizeAssignment_2");
			builder.put(grammarAccess.getClientCallbackAccess().getNameAssignment_4(), "rule__ClientCallback__NameAssignment_4");
			builder.put(grammarAccess.getClientCallbackAccess().getExecutedInAssignment_5_1(), "rule__ClientCallback__ExecutedInAssignment_5_1");
			builder.put(grammarAccess.getClientCallbackAccess().getExecutionTimeAssignment_6_1(), "rule__ClientCallback__ExecutionTimeAssignment_6_1");
			builder.put(grammarAccess.getTimerCallbackAccess().getBufferSizeAssignment_2(), "rule__TimerCallback__BufferSizeAssignment_2");
			builder.put(grammarAccess.getTimerCallbackAccess().getNameAssignment_4(), "rule__TimerCallback__NameAssignment_4");
			builder.put(grammarAccess.getTimerCallbackAccess().getExecutedInAssignment_5_1(), "rule__TimerCallback__ExecutedInAssignment_5_1");
			builder.put(grammarAccess.getTimerCallbackAccess().getOfAssignment_6_1(), "rule__TimerCallback__OfAssignment_6_1");
			builder.put(grammarAccess.getTimerCallbackAccess().getExecutionTimeAssignment_7_1(), "rule__TimerCallback__ExecutionTimeAssignment_7_1");
			builder.put(grammarAccess.getPeriodicTimerAccess().getPeriodAssignment_3(), "rule__PeriodicTimer__PeriodAssignment_3");
			builder.put(grammarAccess.getPeriodicTimerAccess().getNameAssignment_5(), "rule__PeriodicTimer__NameAssignment_5");
			builder.put(grammarAccess.getPeriodicTimerAccess().getFromAssignment_7(), "rule__PeriodicTimer__FromAssignment_7");
			builder.put(grammarAccess.getPeriodicTimerAccess().getSystemtimerAssignment_9(), "rule__PeriodicTimer__SystemtimerAssignment_9");
			builder.put(grammarAccess.getWalltimerAccess().getReleaseTimesAssignment_3(), "rule__Walltimer__ReleaseTimesAssignment_3");
			builder.put(grammarAccess.getWalltimerAccess().getNameAssignment_5(), "rule__Walltimer__NameAssignment_5");
			builder.put(grammarAccess.getWalltimerAccess().getFromAssignment_7(), "rule__Walltimer__FromAssignment_7");
			builder.put(grammarAccess.getWalltimerAccess().getSystemtimerAssignment_9(), "rule__Walltimer__SystemtimerAssignment_9");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
