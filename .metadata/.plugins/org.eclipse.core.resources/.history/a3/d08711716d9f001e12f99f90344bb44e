/**
 */
package ROS2DataModelMM.util;

import ROS2DataModelMM.Callback_instances;
import ROS2DataModelMM.Callback_objects;
import ROS2DataModelMM.Callback_symbols;
import ROS2DataModelMM.Clients;
import ROS2DataModelMM.Contexts;
import ROS2DataModelMM.Nodes;
import ROS2DataModelMM.Publish_instances;
import ROS2DataModelMM.Publishers;
import ROS2DataModelMM.ROS2DataModelMMPackage;
import ROS2DataModelMM.Services;
import ROS2DataModelMM.Subscription_objects;
import ROS2DataModelMM.Subscriptions;
import ROS2DataModelMM.TimerNode_links;
import ROS2DataModelMM.Timers;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see ROS2DataModelMM.ROS2DataModelMMPackage
 * @generated
 */
public class ROS2DataModelMMSwitch<T> extends Switch<T> {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static ROS2DataModelMMPackage modelPackage;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ROS2DataModelMMSwitch() {
		if (modelPackage == null) {
			modelPackage = ROS2DataModelMMPackage.eINSTANCE;
		}
	}

	/**
	 * Checks whether this is a switch for the given package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param ePackage the package in question.
	 * @return whether this is a switch for the given package.
	 * @generated
	 */
	@Override
	protected boolean isSwitchFor(EPackage ePackage) {
		return ePackage == modelPackage;
	}

	/**
	 * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the first non-null result returned by a <code>caseXXX</code> call.
	 * @generated
	 */
	@Override
	protected T doSwitch(int classifierID, EObject theEObject) {
		switch (classifierID) {
		case ROS2DataModelMMPackage.PUBLISHERS: {
			Publishers publishers = (Publishers) theEObject;
			T result = casePublishers(publishers);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.SUBSCRIPTIONS: {
			Subscriptions subscriptions = (Subscriptions) theEObject;
			T result = caseSubscriptions(subscriptions);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.NODES: {
			Nodes nodes = (Nodes) theEObject;
			T result = caseNodes(nodes);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.CONTEXTS: {
			Contexts contexts = (Contexts) theEObject;
			T result = caseContexts(contexts);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.SUBSCRIPTION_OBJECTS: {
			Subscription_objects subscription_objects = (Subscription_objects) theEObject;
			T result = caseSubscription_objects(subscription_objects);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.SERVICES: {
			Services services = (Services) theEObject;
			T result = caseServices(services);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.TIMERS: {
			Timers timers = (Timers) theEObject;
			T result = caseTimers(timers);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.CLIENTS: {
			Clients clients = (Clients) theEObject;
			T result = caseClients(clients);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.TIMER_NODE_LINKS: {
			TimerNode_links timerNode_links = (TimerNode_links) theEObject;
			T result = caseTimerNode_links(timerNode_links);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.CALLBACK_INSTANCES: {
			Callback_instances callback_instances = (Callback_instances) theEObject;
			T result = caseCallback_instances(callback_instances);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.PUBLISH_INSTANCES: {
			Publish_instances publish_instances = (Publish_instances) theEObject;
			T result = casePublish_instances(publish_instances);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.CALLBACK_OBJECTS: {
			Callback_objects callback_objects = (Callback_objects) theEObject;
			T result = caseCallback_objects(callback_objects);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.CALLBACK_SYMBOLS: {
			Callback_symbols callback_symbols = (Callback_symbols) theEObject;
			T result = caseCallback_symbols(callback_symbols);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		case ROS2DataModelMMPackage.SYSTEM: {
			ROS2DataModelMM.System system = (ROS2DataModelMM.System) theEObject;
			T result = caseSystem(system);
			if (result == null)
				result = defaultCase(theEObject);
			return result;
		}
		default:
			return defaultCase(theEObject);
		}
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Publishers</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Publishers</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePublishers(Publishers object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscriptions</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscriptions</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscriptions(Subscriptions object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Nodes</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Nodes</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseNodes(Nodes object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Contexts</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Contexts</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseContexts(Contexts object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Subscription objects</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Subscription objects</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSubscription_objects(Subscription_objects object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Services</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Services</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseServices(Services object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Timers</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Timers</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTimers(Timers object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Clients</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Clients</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseClients(Clients object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Timer Node links</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Timer Node links</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseTimerNode_links(TimerNode_links object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Callback instances</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Callback instances</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCallback_instances(Callback_instances object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Publish instances</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Publish instances</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T casePublish_instances(Publish_instances object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Callback objects</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Callback objects</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCallback_objects(Callback_objects object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Callback symbols</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Callback symbols</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseCallback_symbols(Callback_symbols object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>System</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>System</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * @generated
	 */
	public T caseSystem(ROS2DataModelMM.System object) {
		return null;
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * @generated
	 */
	@Override
	public T defaultCase(EObject object) {
		return null;
	}

} //ROS2DataModelMMSwitch
