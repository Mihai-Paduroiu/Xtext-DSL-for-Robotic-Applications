/**
 * generated by Xtext 2.36.0-SNAPSHOT
 */
package org.xtext.example.mydsl.myDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.myDsl.Callback;
import org.xtext.example.mydsl.myDsl.ClientCallback;
import org.xtext.example.mydsl.myDsl.Executor;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Node;
import org.xtext.example.mydsl.myDsl.PeriodicTimer;
import org.xtext.example.mydsl.myDsl.Publisher;
import org.xtext.example.mydsl.myDsl.Service;
import org.xtext.example.mydsl.myDsl.ServiceCallback;
import org.xtext.example.mydsl.myDsl.ServiceRequest;
import org.xtext.example.mydsl.myDsl.SubscriberCallback;
import org.xtext.example.mydsl.myDsl.SystemModel;
import org.xtext.example.mydsl.myDsl.SystemTimer;
import org.xtext.example.mydsl.myDsl.TimerCallback;
import org.xtext.example.mydsl.myDsl.Topic;
import org.xtext.example.mydsl.myDsl.Walltimer;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage
 * @generated
 */
public class MyDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyDslPackage.SYSTEM_MODEL:
      {
        SystemModel systemModel = (SystemModel)theEObject;
        T result = caseSystemModel(systemModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SYSTEM:
      {
        org.xtext.example.mydsl.myDsl.System system = (org.xtext.example.mydsl.myDsl.System)theEObject;
        T result = caseSystem(system);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.NODE:
      {
        Node node = (Node)theEObject;
        T result = caseNode(node);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CALLBACK:
      {
        Callback callback = (Callback)theEObject;
        T result = caseCallback(callback);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.EXECUTOR:
      {
        Executor executor = (Executor)theEObject;
        T result = caseExecutor(executor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SERVICE:
      {
        Service service = (Service)theEObject;
        T result = caseService(service);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SERVICE_REQUEST:
      {
        ServiceRequest serviceRequest = (ServiceRequest)theEObject;
        T result = caseServiceRequest(serviceRequest);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TOPIC:
      {
        Topic topic = (Topic)theEObject;
        T result = caseTopic(topic);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PUBLISHER:
      {
        Publisher publisher = (Publisher)theEObject;
        T result = casePublisher(publisher);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SUBSCRIBER_CALLBACK:
      {
        SubscriberCallback subscriberCallback = (SubscriberCallback)theEObject;
        T result = caseSubscriberCallback(subscriberCallback);
        if (result == null) result = caseCallback(subscriberCallback);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SERVICE_CALLBACK:
      {
        ServiceCallback serviceCallback = (ServiceCallback)theEObject;
        T result = caseServiceCallback(serviceCallback);
        if (result == null) result = caseCallback(serviceCallback);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CLIENT_CALLBACK:
      {
        ClientCallback clientCallback = (ClientCallback)theEObject;
        T result = caseClientCallback(clientCallback);
        if (result == null) result = caseCallback(clientCallback);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TIMER_CALLBACK:
      {
        TimerCallback timerCallback = (TimerCallback)theEObject;
        T result = caseTimerCallback(timerCallback);
        if (result == null) result = caseCallback(timerCallback);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SYSTEM_TIMER:
      {
        SystemTimer systemTimer = (SystemTimer)theEObject;
        T result = caseSystemTimer(systemTimer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PERIODIC_TIMER:
      {
        PeriodicTimer periodicTimer = (PeriodicTimer)theEObject;
        T result = casePeriodicTimer(periodicTimer);
        if (result == null) result = caseSystemTimer(periodicTimer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.WALLTIMER:
      {
        Walltimer walltimer = (Walltimer)theEObject;
        T result = caseWalltimer(walltimer);
        if (result == null) result = caseSystemTimer(walltimer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemModel(SystemModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystem(org.xtext.example.mydsl.myDsl.System object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Node</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Node</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNode(Node object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Callback</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Callback</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCallback(Callback object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Executor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Executor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExecutor(Executor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Service</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Service</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseService(Service object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Service Request</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Service Request</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseServiceRequest(ServiceRequest object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Topic</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Topic</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTopic(Topic object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Publisher</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Publisher</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePublisher(Publisher object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Subscriber Callback</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Subscriber Callback</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubscriberCallback(SubscriberCallback object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Service Callback</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Service Callback</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseServiceCallback(ServiceCallback object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Client Callback</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Client Callback</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseClientCallback(ClientCallback object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Timer Callback</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Timer Callback</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTimerCallback(TimerCallback object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Timer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Timer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemTimer(SystemTimer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Periodic Timer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Periodic Timer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePeriodicTimer(PeriodicTimer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Walltimer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Walltimer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWalltimer(Walltimer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyDslSwitch
