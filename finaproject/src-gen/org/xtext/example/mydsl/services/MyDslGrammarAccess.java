/*
 * generated by Xtext 2.36.0-SNAPSHOT
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SystemModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SystemModel");
		private final Assignment cSystemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSystemsSystemParserRuleCall_0 = (RuleCall)cSystemsAssignment.eContents().get(0);
		
		//SystemModel returns SystemModel:
		//    systems+=System*;
		@Override public ParserRule getRule() { return rule; }
		
		//systems+=System*
		public Assignment getSystemsAssignment() { return cSystemsAssignment; }
		
		//System
		public RuleCall getSystemsSystemParserRuleCall_0() { return cSystemsSystemParserRuleCall_0; }
	}
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSystemNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSystemNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cSystemNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNodesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNodesNodeParserRuleCall_3_0 = (RuleCall)cNodesAssignment_3.eContents().get(0);
		private final Assignment cTopicsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTopicsTopicParserRuleCall_4_0 = (RuleCall)cTopicsAssignment_4.eContents().get(0);
		private final Assignment cExecutorsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExecutorsExecutorParserRuleCall_5_0 = (RuleCall)cExecutorsAssignment_5.eContents().get(0);
		private final Assignment cServicesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cServicesServiceParserRuleCall_6_0 = (RuleCall)cServicesAssignment_6.eContents().get(0);
		private final Assignment cPeriodictimersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPeriodictimersPeriodicTimerParserRuleCall_7_0 = (RuleCall)cPeriodictimersAssignment_7.eContents().get(0);
		private final Assignment cWalltimersAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cWalltimersWalltimerParserRuleCall_8_0 = (RuleCall)cWalltimersAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//System:
		//    'System' SystemName=STRING
		//    '{'
		//         nodes+=Node+
		//         topics+=Topic*
		//            executors+=Executor+
		//         services+=Service*
		//         periodictimers+=PeriodicTimer*
		//         walltimers+=Walltimer*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'System' SystemName=STRING
		//'{'
		//     nodes+=Node+
		//     topics+=Topic*
		//        executors+=Executor+
		//     services+=Service*
		//     periodictimers+=PeriodicTimer*
		//     walltimers+=Walltimer*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'System'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//SystemName=STRING
		public Assignment getSystemNameAssignment_1() { return cSystemNameAssignment_1; }
		
		//STRING
		public RuleCall getSystemNameSTRINGTerminalRuleCall_1_0() { return cSystemNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//nodes+=Node+
		public Assignment getNodesAssignment_3() { return cNodesAssignment_3; }
		
		//Node
		public RuleCall getNodesNodeParserRuleCall_3_0() { return cNodesNodeParserRuleCall_3_0; }
		
		//topics+=Topic*
		public Assignment getTopicsAssignment_4() { return cTopicsAssignment_4; }
		
		//Topic
		public RuleCall getTopicsTopicParserRuleCall_4_0() { return cTopicsTopicParserRuleCall_4_0; }
		
		//executors+=Executor+
		public Assignment getExecutorsAssignment_5() { return cExecutorsAssignment_5; }
		
		//Executor
		public RuleCall getExecutorsExecutorParserRuleCall_5_0() { return cExecutorsExecutorParserRuleCall_5_0; }
		
		//services+=Service*
		public Assignment getServicesAssignment_6() { return cServicesAssignment_6; }
		
		//Service
		public RuleCall getServicesServiceParserRuleCall_6_0() { return cServicesServiceParserRuleCall_6_0; }
		
		//periodictimers+=PeriodicTimer*
		public Assignment getPeriodictimersAssignment_7() { return cPeriodictimersAssignment_7; }
		
		//PeriodicTimer
		public RuleCall getPeriodictimersPeriodicTimerParserRuleCall_7_0() { return cPeriodictimersPeriodicTimerParserRuleCall_7_0; }
		
		//walltimers+=Walltimer*
		public Assignment getWalltimersAssignment_8() { return cWalltimersAssignment_8; }
		
		//Walltimer
		public RuleCall getWalltimersWalltimerParserRuleCall_8_0() { return cWalltimersWalltimerParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNodeNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNodeNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNodeNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPublishersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPublishersPublisherParserRuleCall_3_0 = (RuleCall)cPublishersAssignment_3.eContents().get(0);
		private final Assignment cSubscribersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubscribersSubscriberCallbackParserRuleCall_4_0 = (RuleCall)cSubscribersAssignment_4.eContents().get(0);
		private final Assignment cServicesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cServicesServiceCallbackParserRuleCall_5_0 = (RuleCall)cServicesAssignment_5.eContents().get(0);
		private final Assignment cServicerequestsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cServicerequestsServiceRequestParserRuleCall_6_0 = (RuleCall)cServicerequestsAssignment_6.eContents().get(0);
		private final Assignment cClientsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cClientsClientCallbackParserRuleCall_7_0 = (RuleCall)cClientsAssignment_7.eContents().get(0);
		private final Assignment cTimersAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTimersTimerCallbackParserRuleCall_8_0 = (RuleCall)cTimersAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Node:
		//    'Node' NodeName=STRING
		//    '{'
		//        publishers+=Publisher*
		//        subscribers+=SubscriberCallback*
		//        services+=ServiceCallback*
		//        servicerequests+=ServiceRequest*
		//        clients+=ClientCallback*
		//        timers+=TimerCallback*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Node' NodeName=STRING
		//'{'
		//    publishers+=Publisher*
		//    subscribers+=SubscriberCallback*
		//    services+=ServiceCallback*
		//    servicerequests+=ServiceRequest*
		//    clients+=ClientCallback*
		//    timers+=TimerCallback*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Node'
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }
		
		//NodeName=STRING
		public Assignment getNodeNameAssignment_1() { return cNodeNameAssignment_1; }
		
		//STRING
		public RuleCall getNodeNameSTRINGTerminalRuleCall_1_0() { return cNodeNameSTRINGTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//publishers+=Publisher*
		public Assignment getPublishersAssignment_3() { return cPublishersAssignment_3; }
		
		//Publisher
		public RuleCall getPublishersPublisherParserRuleCall_3_0() { return cPublishersPublisherParserRuleCall_3_0; }
		
		//subscribers+=SubscriberCallback*
		public Assignment getSubscribersAssignment_4() { return cSubscribersAssignment_4; }
		
		//SubscriberCallback
		public RuleCall getSubscribersSubscriberCallbackParserRuleCall_4_0() { return cSubscribersSubscriberCallbackParserRuleCall_4_0; }
		
		//services+=ServiceCallback*
		public Assignment getServicesAssignment_5() { return cServicesAssignment_5; }
		
		//ServiceCallback
		public RuleCall getServicesServiceCallbackParserRuleCall_5_0() { return cServicesServiceCallbackParserRuleCall_5_0; }
		
		//servicerequests+=ServiceRequest*
		public Assignment getServicerequestsAssignment_6() { return cServicerequestsAssignment_6; }
		
		//ServiceRequest
		public RuleCall getServicerequestsServiceRequestParserRuleCall_6_0() { return cServicerequestsServiceRequestParserRuleCall_6_0; }
		
		//clients+=ClientCallback*
		public Assignment getClientsAssignment_7() { return cClientsAssignment_7; }
		
		//ClientCallback
		public RuleCall getClientsClientCallbackParserRuleCall_7_0() { return cClientsClientCallbackParserRuleCall_7_0; }
		
		//timers+=TimerCallback*
		public Assignment getTimersAssignment_8() { return cTimersAssignment_8; }
		
		//TimerCallback
		public RuleCall getTimersTimerCallbackParserRuleCall_8_0() { return cTimersTimerCallbackParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class CallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Callback");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSubscriberCallbackParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cServiceCallbackParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cClientCallbackParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTimerCallbackParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Callback:
		//    SubscriberCallback | ServiceCallback | ClientCallback | TimerCallback;
		@Override public ParserRule getRule() { return rule; }
		
		//SubscriberCallback | ServiceCallback | ClientCallback | TimerCallback
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SubscriberCallback
		public RuleCall getSubscriberCallbackParserRuleCall_0() { return cSubscriberCallbackParserRuleCall_0; }
		
		//ServiceCallback
		public RuleCall getServiceCallbackParserRuleCall_1() { return cServiceCallbackParserRuleCall_1; }
		
		//ClientCallback
		public RuleCall getClientCallbackParserRuleCall_2() { return cClientCallbackParserRuleCall_2; }
		
		//TimerCallback
		public RuleCall getTimerCallbackParserRuleCall_3() { return cTimerCallbackParserRuleCall_3; }
	}
	public class ExecutorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Executor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExecutorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExecutorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeExecutorTypeEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExecutedKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExecutedAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExecutedCallbackCrossReference_5_1_0 = (CrossReference)cExecutedAssignment_5_1.eContents().get(0);
		private final RuleCall cExecutedCallbackIDTerminalRuleCall_5_1_0_1 = (RuleCall)cExecutedCallbackCrossReference_5_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Executor:
		//    {Executor}
		//    'Executor' name=ID
		//     'Type' type=ExecutorType
		//     ('executed' executed+=[Callback|ID]*)
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Executor}
		//'Executor' name=ID
		// 'Type' type=ExecutorType
		// ('executed' executed+=[Callback|ID]*)
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Executor}
		public Action getExecutorAction_0() { return cExecutorAction_0; }
		
		//'Executor'
		public Keyword getExecutorKeyword_1() { return cExecutorKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'Type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=ExecutorType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//ExecutorType
		public RuleCall getTypeExecutorTypeEnumRuleCall_4_0() { return cTypeExecutorTypeEnumRuleCall_4_0; }
		
		//('executed' executed+=[Callback|ID]*)
		public Group getGroup_5() { return cGroup_5; }
		
		//'executed'
		public Keyword getExecutedKeyword_5_0() { return cExecutedKeyword_5_0; }
		
		//executed+=[Callback|ID]*
		public Assignment getExecutedAssignment_5_1() { return cExecutedAssignment_5_1; }
		
		//[Callback|ID]
		public CrossReference getExecutedCallbackCrossReference_5_1_0() { return cExecutedCallbackCrossReference_5_1_0; }
		
		//ID
		public RuleCall getExecutedCallbackIDTerminalRuleCall_5_1_0_1() { return cExecutedCallbackIDTerminalRuleCall_5_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cServiceReqKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cServiceReqAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cServiceReqServiceRequestCrossReference_2_1_0 = (CrossReference)cServiceReqAssignment_2_1.eContents().get(0);
		private final RuleCall cServiceReqServiceRequestIDTerminalRuleCall_2_1_0_1 = (RuleCall)cServiceReqServiceRequestCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cClientCAllKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClientCAllAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClientCAllClientCallbackCrossReference_3_1_0 = (CrossReference)cClientCAllAssignment_3_1.eContents().get(0);
		private final RuleCall cClientCAllClientCallbackIDTerminalRuleCall_3_1_0_1 = (RuleCall)cClientCAllClientCallbackCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cServiceCAllKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cServiceCAllAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cServiceCAllServiceCallbackCrossReference_4_1_0 = (CrossReference)cServiceCAllAssignment_4_1.eContents().get(0);
		private final RuleCall cServiceCAllServiceCallbackIDTerminalRuleCall_4_1_0_1 = (RuleCall)cServiceCAllServiceCallbackCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Service:
		//    'Service' name=ID
		//     ('serviceReq' serviceReq=[ServiceRequest|ID])?
		//     ('clientCAll' clientCAll=[ClientCallback|ID])?
		//     ('serviceCAll' serviceCAll=[ServiceCallback|ID])?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Service' name=ID
		// ('serviceReq' serviceReq=[ServiceRequest|ID])?
		// ('clientCAll' clientCAll=[ClientCallback|ID])?
		// ('serviceCAll' serviceCAll=[ServiceCallback|ID])?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('serviceReq' serviceReq=[ServiceRequest|ID])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'serviceReq'
		public Keyword getServiceReqKeyword_2_0() { return cServiceReqKeyword_2_0; }
		
		//serviceReq=[ServiceRequest|ID]
		public Assignment getServiceReqAssignment_2_1() { return cServiceReqAssignment_2_1; }
		
		//[ServiceRequest|ID]
		public CrossReference getServiceReqServiceRequestCrossReference_2_1_0() { return cServiceReqServiceRequestCrossReference_2_1_0; }
		
		//ID
		public RuleCall getServiceReqServiceRequestIDTerminalRuleCall_2_1_0_1() { return cServiceReqServiceRequestIDTerminalRuleCall_2_1_0_1; }
		
		//('clientCAll' clientCAll=[ClientCallback|ID])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'clientCAll'
		public Keyword getClientCAllKeyword_3_0() { return cClientCAllKeyword_3_0; }
		
		//clientCAll=[ClientCallback|ID]
		public Assignment getClientCAllAssignment_3_1() { return cClientCAllAssignment_3_1; }
		
		//[ClientCallback|ID]
		public CrossReference getClientCAllClientCallbackCrossReference_3_1_0() { return cClientCAllClientCallbackCrossReference_3_1_0; }
		
		//ID
		public RuleCall getClientCAllClientCallbackIDTerminalRuleCall_3_1_0_1() { return cClientCAllClientCallbackIDTerminalRuleCall_3_1_0_1; }
		
		//('serviceCAll' serviceCAll=[ServiceCallback|ID])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'serviceCAll'
		public Keyword getServiceCAllKeyword_4_0() { return cServiceCAllKeyword_4_0; }
		
		//serviceCAll=[ServiceCallback|ID]
		public Assignment getServiceCAllAssignment_4_1() { return cServiceCAllAssignment_4_1; }
		
		//[ServiceCallback|ID]
		public CrossReference getServiceCAllServiceCallbackCrossReference_4_1_0() { return cServiceCAllServiceCallbackCrossReference_4_1_0; }
		
		//ID
		public RuleCall getServiceCAllServiceCallbackIDTerminalRuleCall_4_1_0_1() { return cServiceCAllServiceCallbackIDTerminalRuleCall_4_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ServiceRequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ServiceRequest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cServiceKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cServiceAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_2_1_0 = (CrossReference)cServiceAssignment_2_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_2_1_0_1 = (RuleCall)cServiceServiceCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ServiceRequest:
		//    'ServiceRequest' name=ID
		//        ('service' service=[Service|ID])?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ServiceRequest' name=ID
		//    ('service' service=[Service|ID])?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ServiceRequest'
		public Keyword getServiceRequestKeyword_0() { return cServiceRequestKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('service' service=[Service|ID])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'service'
		public Keyword getServiceKeyword_2_0() { return cServiceKeyword_2_0; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_2_1() { return cServiceAssignment_2_1; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_2_1_0() { return cServiceServiceCrossReference_2_1_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_2_1_0_1() { return cServiceServiceIDTerminalRuleCall_2_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Topic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTopicAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTopicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPublishedKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPublishedAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPublishedPublisherCrossReference_3_1_0 = (CrossReference)cPublishedAssignment_3_1.eContents().get(0);
		private final RuleCall cPublishedPublisherIDTerminalRuleCall_3_1_0_1 = (RuleCall)cPublishedPublisherCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSubscribedKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSubscribedAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSubscribedSubscriberCallbackCrossReference_4_1_0 = (CrossReference)cSubscribedAssignment_4_1.eContents().get(0);
		private final RuleCall cSubscribedSubscriberCallbackIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSubscribedSubscriberCallbackCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Topic:
		//    {Topic}
		//    'Topic'
		//    name=ID
		//    ('published' published+=[Publisher|ID])*
		//    ('subscribed' subscribed+=[SubscriberCallback|ID])*
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Topic}
		//'Topic'
		//name=ID
		//('published' published+=[Publisher|ID])*
		//('subscribed' subscribed+=[SubscriberCallback|ID])*
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Topic}
		public Action getTopicAction_0() { return cTopicAction_0; }
		
		//'Topic'
		public Keyword getTopicKeyword_1() { return cTopicKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('published' published+=[Publisher|ID])*
		public Group getGroup_3() { return cGroup_3; }
		
		//'published'
		public Keyword getPublishedKeyword_3_0() { return cPublishedKeyword_3_0; }
		
		//published+=[Publisher|ID]
		public Assignment getPublishedAssignment_3_1() { return cPublishedAssignment_3_1; }
		
		//[Publisher|ID]
		public CrossReference getPublishedPublisherCrossReference_3_1_0() { return cPublishedPublisherCrossReference_3_1_0; }
		
		//ID
		public RuleCall getPublishedPublisherIDTerminalRuleCall_3_1_0_1() { return cPublishedPublisherIDTerminalRuleCall_3_1_0_1; }
		
		//('subscribed' subscribed+=[SubscriberCallback|ID])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'subscribed'
		public Keyword getSubscribedKeyword_4_0() { return cSubscribedKeyword_4_0; }
		
		//subscribed+=[SubscriberCallback|ID]
		public Assignment getSubscribedAssignment_4_1() { return cSubscribedAssignment_4_1; }
		
		//[SubscriberCallback|ID]
		public CrossReference getSubscribedSubscriberCallbackCrossReference_4_1_0() { return cSubscribedSubscriberCallbackCrossReference_4_1_0; }
		
		//ID
		public RuleCall getSubscribedSubscriberCallbackIDTerminalRuleCall_4_1_0_1() { return cSubscribedSubscriberCallbackIDTerminalRuleCall_4_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PublisherElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Publisher");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPublisherKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPublishesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPublishesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cPublishesTopicCrossReference_2_1_0 = (CrossReference)cPublishesAssignment_2_1.eContents().get(0);
		private final RuleCall cPublishesTopicIDTerminalRuleCall_2_1_0_1 = (RuleCall)cPublishesTopicCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBufferSizeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBufferSizeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBufferSizeINTTerminalRuleCall_3_1_0 = (RuleCall)cBufferSizeAssignment_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Publisher:
		//    'Publisher'
		//        name=ID
		//        ('publishes' publishes+=[Topic|ID]+)
		//        ('BufferSize' bufferSize=INT)
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Publisher'
		//    name=ID
		//    ('publishes' publishes+=[Topic|ID]+)
		//    ('BufferSize' bufferSize=INT)
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Publisher'
		public Keyword getPublisherKeyword_0() { return cPublisherKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('publishes' publishes+=[Topic|ID]+)
		public Group getGroup_2() { return cGroup_2; }
		
		//'publishes'
		public Keyword getPublishesKeyword_2_0() { return cPublishesKeyword_2_0; }
		
		//publishes+=[Topic|ID]+
		public Assignment getPublishesAssignment_2_1() { return cPublishesAssignment_2_1; }
		
		//[Topic|ID]
		public CrossReference getPublishesTopicCrossReference_2_1_0() { return cPublishesTopicCrossReference_2_1_0; }
		
		//ID
		public RuleCall getPublishesTopicIDTerminalRuleCall_2_1_0_1() { return cPublishesTopicIDTerminalRuleCall_2_1_0_1; }
		
		//('BufferSize' bufferSize=INT)
		public Group getGroup_3() { return cGroup_3; }
		
		//'BufferSize'
		public Keyword getBufferSizeKeyword_3_0() { return cBufferSizeKeyword_3_0; }
		
		//bufferSize=INT
		public Assignment getBufferSizeAssignment_3_1() { return cBufferSizeAssignment_3_1; }
		
		//INT
		public RuleCall getBufferSizeINTTerminalRuleCall_3_1_0() { return cBufferSizeINTTerminalRuleCall_3_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SubscriberCallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SubscriberCallback");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubscriberCallbackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBufferSizeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBufferSizeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBufferSizeINTTerminalRuleCall_2_0 = (RuleCall)cBufferSizeAssignment_2.eContents().get(0);
		private final Keyword cCallbackNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubscribesToKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubscribesToAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubscribesToTopicCrossReference_5_1_0 = (CrossReference)cSubscribesToAssignment_5_1.eContents().get(0);
		private final RuleCall cSubscribesToTopicIDTerminalRuleCall_5_1_0_1 = (RuleCall)cSubscribesToTopicCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cExecutedInKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExecutedInAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cExecutedInExecutorCrossReference_6_1_0 = (CrossReference)cExecutedInAssignment_6_1.eContents().get(0);
		private final RuleCall cExecutedInExecutorIDTerminalRuleCall_6_1_0_1 = (RuleCall)cExecutedInExecutorCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCallBackExecutionTimeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExecutionTimeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExecutionTimeINTTerminalRuleCall_7_1_0 = (RuleCall)cExecutionTimeAssignment_7_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SubscriberCallback:
		//     'SubscriberCallback'
		//     'BufferSize' bufferSize=INT
		//     'CallbackName' name=ID
		//     ('subscribesTo' subscribesTo+=[Topic|ID]+)?
		//     ('executedIn' executedIn+=[Executor|ID]+)?
		//     ('CallBackExecutionTime' executionTime=INT)?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		// 'SubscriberCallback'
		// 'BufferSize' bufferSize=INT
		// 'CallbackName' name=ID
		// ('subscribesTo' subscribesTo+=[Topic|ID]+)?
		// ('executedIn' executedIn+=[Executor|ID]+)?
		// ('CallBackExecutionTime' executionTime=INT)?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SubscriberCallback'
		public Keyword getSubscriberCallbackKeyword_0() { return cSubscriberCallbackKeyword_0; }
		
		//'BufferSize'
		public Keyword getBufferSizeKeyword_1() { return cBufferSizeKeyword_1; }
		
		//bufferSize=INT
		public Assignment getBufferSizeAssignment_2() { return cBufferSizeAssignment_2; }
		
		//INT
		public RuleCall getBufferSizeINTTerminalRuleCall_2_0() { return cBufferSizeINTTerminalRuleCall_2_0; }
		
		//'CallbackName'
		public Keyword getCallbackNameKeyword_3() { return cCallbackNameKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('subscribesTo' subscribesTo+=[Topic|ID]+)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subscribesTo'
		public Keyword getSubscribesToKeyword_5_0() { return cSubscribesToKeyword_5_0; }
		
		//subscribesTo+=[Topic|ID]+
		public Assignment getSubscribesToAssignment_5_1() { return cSubscribesToAssignment_5_1; }
		
		//[Topic|ID]
		public CrossReference getSubscribesToTopicCrossReference_5_1_0() { return cSubscribesToTopicCrossReference_5_1_0; }
		
		//ID
		public RuleCall getSubscribesToTopicIDTerminalRuleCall_5_1_0_1() { return cSubscribesToTopicIDTerminalRuleCall_5_1_0_1; }
		
		//('executedIn' executedIn+=[Executor|ID]+)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'executedIn'
		public Keyword getExecutedInKeyword_6_0() { return cExecutedInKeyword_6_0; }
		
		//executedIn+=[Executor|ID]+
		public Assignment getExecutedInAssignment_6_1() { return cExecutedInAssignment_6_1; }
		
		//[Executor|ID]
		public CrossReference getExecutedInExecutorCrossReference_6_1_0() { return cExecutedInExecutorCrossReference_6_1_0; }
		
		//ID
		public RuleCall getExecutedInExecutorIDTerminalRuleCall_6_1_0_1() { return cExecutedInExecutorIDTerminalRuleCall_6_1_0_1; }
		
		//('CallBackExecutionTime' executionTime=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'CallBackExecutionTime'
		public Keyword getCallBackExecutionTimeKeyword_7_0() { return cCallBackExecutionTimeKeyword_7_0; }
		
		//executionTime=INT
		public Assignment getExecutionTimeAssignment_7_1() { return cExecutionTimeAssignment_7_1; }
		
		//INT
		public RuleCall getExecutionTimeINTTerminalRuleCall_7_1_0() { return cExecutionTimeINTTerminalRuleCall_7_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ServiceCallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ServiceCallback");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceCallbackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBufferSizeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBufferSizeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBufferSizeINTTerminalRuleCall_2_0 = (RuleCall)cBufferSizeAssignment_2.eContents().get(0);
		private final Keyword cCallbackNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cServiceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cServiceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_5_1_0 = (CrossReference)cServiceAssignment_5_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_5_1_0_1 = (RuleCall)cServiceServiceCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cExecutedInKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExecutedInAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cExecutedInExecutorCrossReference_6_1_0 = (CrossReference)cExecutedInAssignment_6_1.eContents().get(0);
		private final RuleCall cExecutedInExecutorIDTerminalRuleCall_6_1_0_1 = (RuleCall)cExecutedInExecutorCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCallBackExecutionTimeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExecutionTimeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExecutionTimeINTTerminalRuleCall_7_1_0 = (RuleCall)cExecutionTimeAssignment_7_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ServiceCallback:
		//    'ServiceCallback'
		//    'BufferSize' bufferSize=INT
		//    'CallbackName' name=ID
		//    ('service' service=[Service|ID])?
		//    ('executedIn' executedIn+=[Executor|ID]+)?
		//    ('CallBackExecutionTime' executionTime=INT)?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ServiceCallback'
		//'BufferSize' bufferSize=INT
		//'CallbackName' name=ID
		//('service' service=[Service|ID])?
		//('executedIn' executedIn+=[Executor|ID]+)?
		//('CallBackExecutionTime' executionTime=INT)?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ServiceCallback'
		public Keyword getServiceCallbackKeyword_0() { return cServiceCallbackKeyword_0; }
		
		//'BufferSize'
		public Keyword getBufferSizeKeyword_1() { return cBufferSizeKeyword_1; }
		
		//bufferSize=INT
		public Assignment getBufferSizeAssignment_2() { return cBufferSizeAssignment_2; }
		
		//INT
		public RuleCall getBufferSizeINTTerminalRuleCall_2_0() { return cBufferSizeINTTerminalRuleCall_2_0; }
		
		//'CallbackName'
		public Keyword getCallbackNameKeyword_3() { return cCallbackNameKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('service' service=[Service|ID])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'service'
		public Keyword getServiceKeyword_5_0() { return cServiceKeyword_5_0; }
		
		//service=[Service|ID]
		public Assignment getServiceAssignment_5_1() { return cServiceAssignment_5_1; }
		
		//[Service|ID]
		public CrossReference getServiceServiceCrossReference_5_1_0() { return cServiceServiceCrossReference_5_1_0; }
		
		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_5_1_0_1() { return cServiceServiceIDTerminalRuleCall_5_1_0_1; }
		
		//('executedIn' executedIn+=[Executor|ID]+)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'executedIn'
		public Keyword getExecutedInKeyword_6_0() { return cExecutedInKeyword_6_0; }
		
		//executedIn+=[Executor|ID]+
		public Assignment getExecutedInAssignment_6_1() { return cExecutedInAssignment_6_1; }
		
		//[Executor|ID]
		public CrossReference getExecutedInExecutorCrossReference_6_1_0() { return cExecutedInExecutorCrossReference_6_1_0; }
		
		//ID
		public RuleCall getExecutedInExecutorIDTerminalRuleCall_6_1_0_1() { return cExecutedInExecutorIDTerminalRuleCall_6_1_0_1; }
		
		//('CallBackExecutionTime' executionTime=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'CallBackExecutionTime'
		public Keyword getCallBackExecutionTimeKeyword_7_0() { return cCallBackExecutionTimeKeyword_7_0; }
		
		//executionTime=INT
		public Assignment getExecutionTimeAssignment_7_1() { return cExecutionTimeAssignment_7_1; }
		
		//INT
		public RuleCall getExecutionTimeINTTerminalRuleCall_7_1_0() { return cExecutionTimeINTTerminalRuleCall_7_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ClientCallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ClientCallback");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClientCallbackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBufferSizeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBufferSizeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBufferSizeINTTerminalRuleCall_2_0 = (RuleCall)cBufferSizeAssignment_2.eContents().get(0);
		private final Keyword cCallbackNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExecutedInKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExecutedInAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExecutedInExecutorCrossReference_5_1_0 = (CrossReference)cExecutedInAssignment_5_1.eContents().get(0);
		private final RuleCall cExecutedInExecutorIDTerminalRuleCall_5_1_0_1 = (RuleCall)cExecutedInExecutorCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCallBackExecutionTimeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExecutionTimeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cExecutionTimeINTTerminalRuleCall_6_1_0 = (RuleCall)cExecutionTimeAssignment_6_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ClientCallback:
		//    'ClientCallback'
		//    'BufferSize' bufferSize=INT
		//    'CallbackName' name=ID
		//    ('executedIn' executedIn+=[Executor|ID]+)?
		//    ('CallBackExecutionTime' executionTime=INT)?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ClientCallback'
		//'BufferSize' bufferSize=INT
		//'CallbackName' name=ID
		//('executedIn' executedIn+=[Executor|ID]+)?
		//('CallBackExecutionTime' executionTime=INT)?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ClientCallback'
		public Keyword getClientCallbackKeyword_0() { return cClientCallbackKeyword_0; }
		
		//'BufferSize'
		public Keyword getBufferSizeKeyword_1() { return cBufferSizeKeyword_1; }
		
		//bufferSize=INT
		public Assignment getBufferSizeAssignment_2() { return cBufferSizeAssignment_2; }
		
		//INT
		public RuleCall getBufferSizeINTTerminalRuleCall_2_0() { return cBufferSizeINTTerminalRuleCall_2_0; }
		
		//'CallbackName'
		public Keyword getCallbackNameKeyword_3() { return cCallbackNameKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('executedIn' executedIn+=[Executor|ID]+)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'executedIn'
		public Keyword getExecutedInKeyword_5_0() { return cExecutedInKeyword_5_0; }
		
		//executedIn+=[Executor|ID]+
		public Assignment getExecutedInAssignment_5_1() { return cExecutedInAssignment_5_1; }
		
		//[Executor|ID]
		public CrossReference getExecutedInExecutorCrossReference_5_1_0() { return cExecutedInExecutorCrossReference_5_1_0; }
		
		//ID
		public RuleCall getExecutedInExecutorIDTerminalRuleCall_5_1_0_1() { return cExecutedInExecutorIDTerminalRuleCall_5_1_0_1; }
		
		//('CallBackExecutionTime' executionTime=INT)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'CallBackExecutionTime'
		public Keyword getCallBackExecutionTimeKeyword_6_0() { return cCallBackExecutionTimeKeyword_6_0; }
		
		//executionTime=INT
		public Assignment getExecutionTimeAssignment_6_1() { return cExecutionTimeAssignment_6_1; }
		
		//INT
		public RuleCall getExecutionTimeINTTerminalRuleCall_6_1_0() { return cExecutionTimeINTTerminalRuleCall_6_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TimerCallbackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TimerCallback");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimerCallbackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBufferSizeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBufferSizeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBufferSizeINTTerminalRuleCall_2_0 = (RuleCall)cBufferSizeAssignment_2.eContents().get(0);
		private final Keyword cCallbackNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExecutedInKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExecutedInAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cExecutedInExecutorCrossReference_5_1_0 = (CrossReference)cExecutedInAssignment_5_1.eContents().get(0);
		private final RuleCall cExecutedInExecutorIDTerminalRuleCall_5_1_0_1 = (RuleCall)cExecutedInExecutorCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOfKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOfAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOfSystemTimerCrossReference_6_1_0 = (CrossReference)cOfAssignment_6_1.eContents().get(0);
		private final RuleCall cOfSystemTimerSTRINGTerminalRuleCall_6_1_0_1 = (RuleCall)cOfSystemTimerCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCallBackExecutionTimeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExecutionTimeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExecutionTimeINTTerminalRuleCall_7_1_0 = (RuleCall)cExecutionTimeAssignment_7_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//TimerCallback:
		//    'TimerCallback'
		//    'BufferSize' bufferSize=INT
		//    'CallbackName' name=ID
		//    ('executedIn' executedIn+=[Executor|ID]+)?
		//    ('of' of=[SystemTimer|STRING])?
		//    ('CallBackExecutionTime' executionTime=INT)?
		//    '{'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TimerCallback'
		//'BufferSize' bufferSize=INT
		//'CallbackName' name=ID
		//('executedIn' executedIn+=[Executor|ID]+)?
		//('of' of=[SystemTimer|STRING])?
		//('CallBackExecutionTime' executionTime=INT)?
		//'{'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'TimerCallback'
		public Keyword getTimerCallbackKeyword_0() { return cTimerCallbackKeyword_0; }
		
		//'BufferSize'
		public Keyword getBufferSizeKeyword_1() { return cBufferSizeKeyword_1; }
		
		//bufferSize=INT
		public Assignment getBufferSizeAssignment_2() { return cBufferSizeAssignment_2; }
		
		//INT
		public RuleCall getBufferSizeINTTerminalRuleCall_2_0() { return cBufferSizeINTTerminalRuleCall_2_0; }
		
		//'CallbackName'
		public Keyword getCallbackNameKeyword_3() { return cCallbackNameKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('executedIn' executedIn+=[Executor|ID]+)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'executedIn'
		public Keyword getExecutedInKeyword_5_0() { return cExecutedInKeyword_5_0; }
		
		//executedIn+=[Executor|ID]+
		public Assignment getExecutedInAssignment_5_1() { return cExecutedInAssignment_5_1; }
		
		//[Executor|ID]
		public CrossReference getExecutedInExecutorCrossReference_5_1_0() { return cExecutedInExecutorCrossReference_5_1_0; }
		
		//ID
		public RuleCall getExecutedInExecutorIDTerminalRuleCall_5_1_0_1() { return cExecutedInExecutorIDTerminalRuleCall_5_1_0_1; }
		
		//('of' of=[SystemTimer|STRING])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'of'
		public Keyword getOfKeyword_6_0() { return cOfKeyword_6_0; }
		
		//of=[SystemTimer|STRING]
		public Assignment getOfAssignment_6_1() { return cOfAssignment_6_1; }
		
		//[SystemTimer|STRING]
		public CrossReference getOfSystemTimerCrossReference_6_1_0() { return cOfSystemTimerCrossReference_6_1_0; }
		
		//STRING
		public RuleCall getOfSystemTimerSTRINGTerminalRuleCall_6_1_0_1() { return cOfSystemTimerSTRINGTerminalRuleCall_6_1_0_1; }
		
		//('CallBackExecutionTime' executionTime=INT)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'CallBackExecutionTime'
		public Keyword getCallBackExecutionTimeKeyword_7_0() { return cCallBackExecutionTimeKeyword_7_0; }
		
		//executionTime=INT
		public Assignment getExecutionTimeAssignment_7_1() { return cExecutionTimeAssignment_7_1; }
		
		//INT
		public RuleCall getExecutionTimeINTTerminalRuleCall_7_1_0() { return cExecutionTimeINTTerminalRuleCall_7_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class SystemTimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SystemTimer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPeriodicTimerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWalltimerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SystemTimer:
		//    PeriodicTimer | Walltimer ;
		@Override public ParserRule getRule() { return rule; }
		
		//PeriodicTimer | Walltimer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PeriodicTimer
		public RuleCall getPeriodicTimerParserRuleCall_0() { return cPeriodicTimerParserRuleCall_0; }
		
		//Walltimer
		public RuleCall getWalltimerParserRuleCall_1() { return cWalltimerParserRuleCall_1; }
	}
	public class PeriodicTimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PeriodicTimer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPeriodicTimerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPeriodicTimerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPeriodKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPeriodAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPeriodINTTerminalRuleCall_3_0 = (RuleCall)cPeriodAssignment_3.eContents().get(0);
		private final Keyword cSystemTimerNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFromAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cFromTimerCallbackCrossReference_7_0 = (CrossReference)cFromAssignment_7.eContents().get(0);
		private final RuleCall cFromTimerCallbackIDTerminalRuleCall_7_0_1 = (RuleCall)cFromTimerCallbackCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSystemtimerAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSystemtimerSystemTimerParserRuleCall_9_0 = (RuleCall)cSystemtimerAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//PeriodicTimer:
		//    {PeriodicTimer}
		//     'PeriodicTimer'
		//     'Period' period=INT
		//     'SystemTimerName' name=STRING
		//     'from' from=[TimerCallback|ID]
		//    '{'
		//           systemtimer+=SystemTimer*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{PeriodicTimer}
		// 'PeriodicTimer'
		// 'Period' period=INT
		// 'SystemTimerName' name=STRING
		// 'from' from=[TimerCallback|ID]
		//'{'
		//       systemtimer+=SystemTimer*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{PeriodicTimer}
		public Action getPeriodicTimerAction_0() { return cPeriodicTimerAction_0; }
		
		//'PeriodicTimer'
		public Keyword getPeriodicTimerKeyword_1() { return cPeriodicTimerKeyword_1; }
		
		//'Period'
		public Keyword getPeriodKeyword_2() { return cPeriodKeyword_2; }
		
		//period=INT
		public Assignment getPeriodAssignment_3() { return cPeriodAssignment_3; }
		
		//INT
		public RuleCall getPeriodINTTerminalRuleCall_3_0() { return cPeriodINTTerminalRuleCall_3_0; }
		
		//'SystemTimerName'
		public Keyword getSystemTimerNameKeyword_4() { return cSystemTimerNameKeyword_4; }
		
		//name=STRING
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_0() { return cNameSTRINGTerminalRuleCall_5_0; }
		
		//'from'
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }
		
		//from=[TimerCallback|ID]
		public Assignment getFromAssignment_7() { return cFromAssignment_7; }
		
		//[TimerCallback|ID]
		public CrossReference getFromTimerCallbackCrossReference_7_0() { return cFromTimerCallbackCrossReference_7_0; }
		
		//ID
		public RuleCall getFromTimerCallbackIDTerminalRuleCall_7_0_1() { return cFromTimerCallbackIDTerminalRuleCall_7_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//systemtimer+=SystemTimer*
		public Assignment getSystemtimerAssignment_9() { return cSystemtimerAssignment_9; }
		
		//SystemTimer
		public RuleCall getSystemtimerSystemTimerParserRuleCall_9_0() { return cSystemtimerSystemTimerParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class WalltimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Walltimer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWalltimerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWalltimerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cReleaseTimesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReleaseTimesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReleaseTimesINTTerminalRuleCall_3_0 = (RuleCall)cReleaseTimesAssignment_3.eContents().get(0);
		private final Keyword cSystemTimerNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFromAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cFromTimerCallbackCrossReference_7_0 = (CrossReference)cFromAssignment_7.eContents().get(0);
		private final RuleCall cFromTimerCallbackIDTerminalRuleCall_7_0_1 = (RuleCall)cFromTimerCallbackCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSystemtimerAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSystemtimerSystemTimerParserRuleCall_9_0 = (RuleCall)cSystemtimerAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Walltimer:
		//    {Walltimer}
		//    'Walltimer'
		//       'ReleaseTimes' releaseTimes=INT
		//       'SystemTimerName' name=STRING
		//       'from' from=[TimerCallback|ID]
		//    '{'
		//          systemtimer+=SystemTimer*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Walltimer}
		//'Walltimer'
		//   'ReleaseTimes' releaseTimes=INT
		//   'SystemTimerName' name=STRING
		//   'from' from=[TimerCallback|ID]
		//'{'
		//      systemtimer+=SystemTimer*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Walltimer}
		public Action getWalltimerAction_0() { return cWalltimerAction_0; }
		
		//'Walltimer'
		public Keyword getWalltimerKeyword_1() { return cWalltimerKeyword_1; }
		
		//'ReleaseTimes'
		public Keyword getReleaseTimesKeyword_2() { return cReleaseTimesKeyword_2; }
		
		//releaseTimes=INT
		public Assignment getReleaseTimesAssignment_3() { return cReleaseTimesAssignment_3; }
		
		//INT
		public RuleCall getReleaseTimesINTTerminalRuleCall_3_0() { return cReleaseTimesINTTerminalRuleCall_3_0; }
		
		//'SystemTimerName'
		public Keyword getSystemTimerNameKeyword_4() { return cSystemTimerNameKeyword_4; }
		
		//name=STRING
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_5_0() { return cNameSTRINGTerminalRuleCall_5_0; }
		
		//'from'
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }
		
		//from=[TimerCallback|ID]
		public Assignment getFromAssignment_7() { return cFromAssignment_7; }
		
		//[TimerCallback|ID]
		public CrossReference getFromTimerCallbackCrossReference_7_0() { return cFromTimerCallbackCrossReference_7_0; }
		
		//ID
		public RuleCall getFromTimerCallbackIDTerminalRuleCall_7_0_1() { return cFromTimerCallbackIDTerminalRuleCall_7_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//systemtimer+=SystemTimer*
		public Assignment getSystemtimerAssignment_9() { return cSystemtimerAssignment_9; }
		
		//SystemTimer
		public RuleCall getSystemtimerSystemTimerParserRuleCall_9_0() { return cSystemtimerSystemTimerParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	
	public class ExecutorTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ExecutorType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLETHREADEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLETHREADEDSINGLETHREADEDKeyword_0_0 = (Keyword)cSINGLETHREADEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTATICSINGLETHREADEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTATICSINGLETHREADEDSTATICSINGLETHREADEDKeyword_1_0 = (Keyword)cSTATICSINGLETHREADEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMULTITHREADEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMULTITHREADEDMULTITHREADEDKeyword_2_0 = (Keyword)cMULTITHREADEDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ExecutorType:
		//            SINGLETHREADED = 'SINGLETHREADED' |
		//            STATICSINGLETHREADED = 'STATICSINGLETHREADED' |
		//            MULTITHREADED = 'MULTITHREADED';
		public EnumRule getRule() { return rule; }
		
		//SINGLETHREADED = 'SINGLETHREADED' |
		//STATICSINGLETHREADED = 'STATICSINGLETHREADED' |
		//MULTITHREADED = 'MULTITHREADED'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SINGLETHREADED = 'SINGLETHREADED'
		public EnumLiteralDeclaration getSINGLETHREADEDEnumLiteralDeclaration_0() { return cSINGLETHREADEDEnumLiteralDeclaration_0; }
		
		//'SINGLETHREADED'
		public Keyword getSINGLETHREADEDSINGLETHREADEDKeyword_0_0() { return cSINGLETHREADEDSINGLETHREADEDKeyword_0_0; }
		
		//STATICSINGLETHREADED = 'STATICSINGLETHREADED'
		public EnumLiteralDeclaration getSTATICSINGLETHREADEDEnumLiteralDeclaration_1() { return cSTATICSINGLETHREADEDEnumLiteralDeclaration_1; }
		
		//'STATICSINGLETHREADED'
		public Keyword getSTATICSINGLETHREADEDSTATICSINGLETHREADEDKeyword_1_0() { return cSTATICSINGLETHREADEDSTATICSINGLETHREADEDKeyword_1_0; }
		
		//MULTITHREADED = 'MULTITHREADED'
		public EnumLiteralDeclaration getMULTITHREADEDEnumLiteralDeclaration_2() { return cMULTITHREADEDEnumLiteralDeclaration_2; }
		
		//'MULTITHREADED'
		public Keyword getMULTITHREADEDMULTITHREADEDKeyword_2_0() { return cMULTITHREADEDMULTITHREADEDKeyword_2_0; }
	}
	
	private final SystemModelElements pSystemModel;
	private final SystemElements pSystem;
	private final NodeElements pNode;
	private final CallbackElements pCallback;
	private final ExecutorElements pExecutor;
	private final ServiceElements pService;
	private final ServiceRequestElements pServiceRequest;
	private final TopicElements pTopic;
	private final PublisherElements pPublisher;
	private final SubscriberCallbackElements pSubscriberCallback;
	private final ServiceCallbackElements pServiceCallback;
	private final ClientCallbackElements pClientCallback;
	private final TimerCallbackElements pTimerCallback;
	private final SystemTimerElements pSystemTimer;
	private final PeriodicTimerElements pPeriodicTimer;
	private final WalltimerElements pWalltimer;
	private final ExecutorTypeElements eExecutorType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSystemModel = new SystemModelElements();
		this.pSystem = new SystemElements();
		this.pNode = new NodeElements();
		this.pCallback = new CallbackElements();
		this.pExecutor = new ExecutorElements();
		this.pService = new ServiceElements();
		this.pServiceRequest = new ServiceRequestElements();
		this.pTopic = new TopicElements();
		this.pPublisher = new PublisherElements();
		this.pSubscriberCallback = new SubscriberCallbackElements();
		this.pServiceCallback = new ServiceCallbackElements();
		this.pClientCallback = new ClientCallbackElements();
		this.pTimerCallback = new TimerCallbackElements();
		this.pSystemTimer = new SystemTimerElements();
		this.pPeriodicTimer = new PeriodicTimerElements();
		this.pWalltimer = new WalltimerElements();
		this.eExecutorType = new ExecutorTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SystemModel returns SystemModel:
	//    systems+=System*;
	public SystemModelElements getSystemModelAccess() {
		return pSystemModel;
	}
	
	public ParserRule getSystemModelRule() {
		return getSystemModelAccess().getRule();
	}
	
	//System:
	//    'System' SystemName=STRING
	//    '{'
	//         nodes+=Node+
	//         topics+=Topic*
	//            executors+=Executor+
	//         services+=Service*
	//         periodictimers+=PeriodicTimer*
	//         walltimers+=Walltimer*
	//    '}';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	//Node:
	//    'Node' NodeName=STRING
	//    '{'
	//        publishers+=Publisher*
	//        subscribers+=SubscriberCallback*
	//        services+=ServiceCallback*
	//        servicerequests+=ServiceRequest*
	//        clients+=ClientCallback*
	//        timers+=TimerCallback*
	//    '}';
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//Callback:
	//    SubscriberCallback | ServiceCallback | ClientCallback | TimerCallback;
	public CallbackElements getCallbackAccess() {
		return pCallback;
	}
	
	public ParserRule getCallbackRule() {
		return getCallbackAccess().getRule();
	}
	
	//Executor:
	//    {Executor}
	//    'Executor' name=ID
	//     'Type' type=ExecutorType
	//     ('executed' executed+=[Callback|ID]*)
	//    '{'
	//    '}';
	public ExecutorElements getExecutorAccess() {
		return pExecutor;
	}
	
	public ParserRule getExecutorRule() {
		return getExecutorAccess().getRule();
	}
	
	//Service:
	//    'Service' name=ID
	//     ('serviceReq' serviceReq=[ServiceRequest|ID])?
	//     ('clientCAll' clientCAll=[ClientCallback|ID])?
	//     ('serviceCAll' serviceCAll=[ServiceCallback|ID])?
	//    '{'
	//    '}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//ServiceRequest:
	//    'ServiceRequest' name=ID
	//        ('service' service=[Service|ID])?
	//    '{'
	//    '}';
	public ServiceRequestElements getServiceRequestAccess() {
		return pServiceRequest;
	}
	
	public ParserRule getServiceRequestRule() {
		return getServiceRequestAccess().getRule();
	}
	
	//Topic:
	//    {Topic}
	//    'Topic'
	//    name=ID
	//    ('published' published+=[Publisher|ID])*
	//    ('subscribed' subscribed+=[SubscriberCallback|ID])*
	//    '{'
	//    '}';
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}
	
	//Publisher:
	//    'Publisher'
	//        name=ID
	//        ('publishes' publishes+=[Topic|ID]+)
	//        ('BufferSize' bufferSize=INT)
	//    '{'
	//    '}';
	public PublisherElements getPublisherAccess() {
		return pPublisher;
	}
	
	public ParserRule getPublisherRule() {
		return getPublisherAccess().getRule();
	}
	
	//SubscriberCallback:
	//     'SubscriberCallback'
	//     'BufferSize' bufferSize=INT
	//     'CallbackName' name=ID
	//     ('subscribesTo' subscribesTo+=[Topic|ID]+)?
	//     ('executedIn' executedIn+=[Executor|ID]+)?
	//     ('CallBackExecutionTime' executionTime=INT)?
	//    '{'
	//    '}';
	public SubscriberCallbackElements getSubscriberCallbackAccess() {
		return pSubscriberCallback;
	}
	
	public ParserRule getSubscriberCallbackRule() {
		return getSubscriberCallbackAccess().getRule();
	}
	
	//ServiceCallback:
	//    'ServiceCallback'
	//    'BufferSize' bufferSize=INT
	//    'CallbackName' name=ID
	//    ('service' service=[Service|ID])?
	//    ('executedIn' executedIn+=[Executor|ID]+)?
	//    ('CallBackExecutionTime' executionTime=INT)?
	//    '{'
	//    '}';
	public ServiceCallbackElements getServiceCallbackAccess() {
		return pServiceCallback;
	}
	
	public ParserRule getServiceCallbackRule() {
		return getServiceCallbackAccess().getRule();
	}
	
	//ClientCallback:
	//    'ClientCallback'
	//    'BufferSize' bufferSize=INT
	//    'CallbackName' name=ID
	//    ('executedIn' executedIn+=[Executor|ID]+)?
	//    ('CallBackExecutionTime' executionTime=INT)?
	//    '{'
	//    '}';
	public ClientCallbackElements getClientCallbackAccess() {
		return pClientCallback;
	}
	
	public ParserRule getClientCallbackRule() {
		return getClientCallbackAccess().getRule();
	}
	
	//TimerCallback:
	//    'TimerCallback'
	//    'BufferSize' bufferSize=INT
	//    'CallbackName' name=ID
	//    ('executedIn' executedIn+=[Executor|ID]+)?
	//    ('of' of=[SystemTimer|STRING])?
	//    ('CallBackExecutionTime' executionTime=INT)?
	//    '{'
	//    '}';
	public TimerCallbackElements getTimerCallbackAccess() {
		return pTimerCallback;
	}
	
	public ParserRule getTimerCallbackRule() {
		return getTimerCallbackAccess().getRule();
	}
	
	//SystemTimer:
	//    PeriodicTimer | Walltimer ;
	public SystemTimerElements getSystemTimerAccess() {
		return pSystemTimer;
	}
	
	public ParserRule getSystemTimerRule() {
		return getSystemTimerAccess().getRule();
	}
	
	//PeriodicTimer:
	//    {PeriodicTimer}
	//     'PeriodicTimer'
	//     'Period' period=INT
	//     'SystemTimerName' name=STRING
	//     'from' from=[TimerCallback|ID]
	//    '{'
	//           systemtimer+=SystemTimer*
	//    '}';
	public PeriodicTimerElements getPeriodicTimerAccess() {
		return pPeriodicTimer;
	}
	
	public ParserRule getPeriodicTimerRule() {
		return getPeriodicTimerAccess().getRule();
	}
	
	//Walltimer:
	//    {Walltimer}
	//    'Walltimer'
	//       'ReleaseTimes' releaseTimes=INT
	//       'SystemTimerName' name=STRING
	//       'from' from=[TimerCallback|ID]
	//    '{'
	//          systemtimer+=SystemTimer*
	//    '}';
	public WalltimerElements getWalltimerAccess() {
		return pWalltimer;
	}
	
	public ParserRule getWalltimerRule() {
		return getWalltimerAccess().getRule();
	}
	
	//enum ExecutorType:
	//            SINGLETHREADED = 'SINGLETHREADED' |
	//            STATICSINGLETHREADED = 'STATICSINGLETHREADED' |
	//            MULTITHREADED = 'MULTITHREADED';
	public ExecutorTypeElements getExecutorTypeAccess() {
		return eExecutorType;
	}
	
	public EnumRule getExecutorTypeRule() {
		return getExecutorTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
