/*
 * generated by Xtext 2.36.0-SNAPSHOT
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SystemModel";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSystemModel
entryRuleSystemModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemModelRule()); }
	iv_ruleSystemModel=ruleSystemModel
	{ $current=$iv_ruleSystemModel.current; }
	EOF;

// Rule SystemModel
ruleSystemModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSystemModelAccess().getSystemsSystemParserRuleCall_0());
			}
			lv_systems_0_0=ruleSystem
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSystemModelRule());
				}
				add(
					$current,
					"systems",
					lv_systems_0_0,
					"org.xtext.example.mydsl.MyDsl.System");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='System'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_SystemName_1_0=RULE_STRING
				{
					newLeafNode(lv_SystemName_1_0, grammarAccess.getSystemAccess().getSystemNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRule());
					}
					setWithLastConsumed(
						$current,
						"SystemName",
						lv_SystemName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getNodesNodeParserRuleCall_3_0());
				}
				lv_nodes_3_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_3_0,
						"org.xtext.example.mydsl.MyDsl.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getTopicsTopicParserRuleCall_4_0());
				}
				lv_topics_4_0=ruleTopic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"topics",
						lv_topics_4_0,
						"org.xtext.example.mydsl.MyDsl.Topic");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getExecutorsExecutorParserRuleCall_5_0());
				}
				lv_executors_5_0=ruleExecutor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"executors",
						lv_executors_5_0,
						"org.xtext.example.mydsl.MyDsl.Executor");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getServicesServiceParserRuleCall_6_0());
				}
				lv_services_6_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"services",
						lv_services_6_0,
						"org.xtext.example.mydsl.MyDsl.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getPeriodictimersPeriodicTimerParserRuleCall_7_0());
				}
				lv_periodictimers_7_0=rulePeriodicTimer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"periodictimers",
						lv_periodictimers_7_0,
						"org.xtext.example.mydsl.MyDsl.PeriodicTimer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getWalltimersWalltimerParserRuleCall_8_0());
				}
				lv_walltimers_8_0=ruleWalltimer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"walltimers",
						lv_walltimers_8_0,
						"org.xtext.example.mydsl.MyDsl.Walltimer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSystemAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_NodeName_1_0=RULE_STRING
				{
					newLeafNode(lv_NodeName_1_0, grammarAccess.getNodeAccess().getNodeNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"NodeName",
						lv_NodeName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getPublishersPublisherParserRuleCall_3_0());
				}
				lv_publishers_3_0=rulePublisher
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"publishers",
						lv_publishers_3_0,
						"org.xtext.example.mydsl.MyDsl.Publisher");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getSubscribersSubscriberCallbackParserRuleCall_4_0());
				}
				lv_subscribers_4_0=ruleSubscriberCallback
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"subscribers",
						lv_subscribers_4_0,
						"org.xtext.example.mydsl.MyDsl.SubscriberCallback");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getServicesServiceCallbackParserRuleCall_5_0());
				}
				lv_services_5_0=ruleServiceCallback
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"services",
						lv_services_5_0,
						"org.xtext.example.mydsl.MyDsl.ServiceCallback");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getServicerequestsServiceRequestParserRuleCall_6_0());
				}
				lv_servicerequests_6_0=ruleServiceRequest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"servicerequests",
						lv_servicerequests_6_0,
						"org.xtext.example.mydsl.MyDsl.ServiceRequest");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getClientsClientCallbackParserRuleCall_7_0());
				}
				lv_clients_7_0=ruleClientCallback
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"clients",
						lv_clients_7_0,
						"org.xtext.example.mydsl.MyDsl.ClientCallback");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getTimersTimerCallbackParserRuleCall_8_0());
				}
				lv_timers_8_0=ruleTimerCallback
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					add(
						$current,
						"timers",
						lv_timers_8_0,
						"org.xtext.example.mydsl.MyDsl.TimerCallback");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleExecutor
entryRuleExecutor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecutorRule()); }
	iv_ruleExecutor=ruleExecutor
	{ $current=$iv_ruleExecutor.current; }
	EOF;

// Rule Executor
ruleExecutor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExecutorAccess().getExecutorAction_0(),
					$current);
			}
		)
		otherlv_1='Executor'
		{
			newLeafNode(otherlv_1, grammarAccess.getExecutorAccess().getExecutorKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getExecutorAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExecutorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='Type'
		{
			newLeafNode(otherlv_3, grammarAccess.getExecutorAccess().getTypeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExecutorAccess().getTypeExecutorTypeEnumRuleCall_4_0());
				}
				lv_type_4_0=ruleExecutorType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExecutorRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"org.xtext.example.mydsl.MyDsl.ExecutorType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='executed'
			{
				newLeafNode(otherlv_5, grammarAccess.getExecutorAccess().getExecutedKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExecutorRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getExecutorAccess().getExecutedCallbackCrossReference_5_1_0());
					}
				)
			)*
		)
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getExecutorAccess().getLeftCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getExecutorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='serviceReq'
			{
				newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getServiceReqKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getServiceReqServiceRequestCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			otherlv_4='clientCAll'
			{
				newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getClientCAllKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getClientCAllClientCallbackCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			otherlv_6='serviceCAll'
			{
				newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getServiceCAllKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getServiceAccess().getServiceCAllServiceCallbackCrossReference_4_1_0());
					}
				)
			)
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleServiceRequest
entryRuleServiceRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRequestRule()); }
	iv_ruleServiceRequest=ruleServiceRequest
	{ $current=$iv_ruleServiceRequest.current; }
	EOF;

// Rule ServiceRequest
ruleServiceRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServiceRequest'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceRequestAccess().getServiceRequestKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceRequestAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRequestRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='service'
			{
				newLeafNode(otherlv_2, grammarAccess.getServiceRequestAccess().getServiceKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRequestRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getServiceRequestAccess().getServiceServiceCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceRequestAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getServiceRequestAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTopic
entryRuleTopic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopicRule()); }
	iv_ruleTopic=ruleTopic
	{ $current=$iv_ruleTopic.current; }
	EOF;

// Rule Topic
ruleTopic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTopicAccess().getTopicAction_0(),
					$current);
			}
		)
		otherlv_1='Topic'
		{
			newLeafNode(otherlv_1, grammarAccess.getTopicAccess().getTopicKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTopicAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTopicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='published'
			{
				newLeafNode(otherlv_3, grammarAccess.getTopicAccess().getPublishedKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTopicRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getTopicAccess().getPublishedPublisherCrossReference_3_1_0());
					}
				)
			)
		)*
		(
			otherlv_5='subscribed'
			{
				newLeafNode(otherlv_5, grammarAccess.getTopicAccess().getSubscribedKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTopicRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getTopicAccess().getSubscribedSubscriberCallbackCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getTopicAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTopicAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePublisher
entryRulePublisher returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPublisherRule()); }
	iv_rulePublisher=rulePublisher
	{ $current=$iv_rulePublisher.current; }
	EOF;

// Rule Publisher
rulePublisher returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Publisher'
		{
			newLeafNode(otherlv_0, grammarAccess.getPublisherAccess().getPublisherKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPublisherAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPublisherRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='publishes'
			{
				newLeafNode(otherlv_2, grammarAccess.getPublisherAccess().getPublishesKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPublisherRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getPublisherAccess().getPublishesTopicCrossReference_2_1_0());
					}
				)
			)+
		)
		(
			otherlv_4='BufferSize'
			{
				newLeafNode(otherlv_4, grammarAccess.getPublisherAccess().getBufferSizeKeyword_3_0());
			}
			(
				(
					lv_bufferSize_5_0=RULE_INT
					{
						newLeafNode(lv_bufferSize_5_0, grammarAccess.getPublisherAccess().getBufferSizeINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPublisherRule());
						}
						setWithLastConsumed(
							$current,
							"bufferSize",
							lv_bufferSize_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getPublisherAccess().getLeftCurlyBracketKeyword_4());
		}
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getPublisherAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSubscriberCallback
entryRuleSubscriberCallback returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubscriberCallbackRule()); }
	iv_ruleSubscriberCallback=ruleSubscriberCallback
	{ $current=$iv_ruleSubscriberCallback.current; }
	EOF;

// Rule SubscriberCallback
ruleSubscriberCallback returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SubscriberCallback'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubscriberCallbackAccess().getSubscriberCallbackKeyword_0());
		}
		otherlv_1='BufferSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubscriberCallbackAccess().getBufferSizeKeyword_1());
		}
		(
			(
				lv_bufferSize_2_0=RULE_INT
				{
					newLeafNode(lv_bufferSize_2_0, grammarAccess.getSubscriberCallbackAccess().getBufferSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubscriberCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"bufferSize",
						lv_bufferSize_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='CallbackName'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubscriberCallbackAccess().getCallbackNameKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getSubscriberCallbackAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubscriberCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='subscribesTo'
			{
				newLeafNode(otherlv_5, grammarAccess.getSubscriberCallbackAccess().getSubscribesToKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubscriberCallbackRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getSubscriberCallbackAccess().getSubscribesToTopicCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			otherlv_7='executedIn'
			{
				newLeafNode(otherlv_7, grammarAccess.getSubscriberCallbackAccess().getExecutedInKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubscriberCallbackRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getSubscriberCallbackAccess().getExecutedInExecutorCrossReference_6_1_0());
					}
				)
			)+
		)?
		(
			otherlv_9='CallBackExecutionTime'
			{
				newLeafNode(otherlv_9, grammarAccess.getSubscriberCallbackAccess().getCallBackExecutionTimeKeyword_7_0());
			}
			(
				(
					lv_executionTime_10_0=RULE_INT
					{
						newLeafNode(lv_executionTime_10_0, grammarAccess.getSubscriberCallbackAccess().getExecutionTimeINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubscriberCallbackRule());
						}
						setWithLastConsumed(
							$current,
							"executionTime",
							lv_executionTime_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getSubscriberCallbackAccess().getLeftCurlyBracketKeyword_8());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getSubscriberCallbackAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleServiceCallback
entryRuleServiceCallback returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceCallbackRule()); }
	iv_ruleServiceCallback=ruleServiceCallback
	{ $current=$iv_ruleServiceCallback.current; }
	EOF;

// Rule ServiceCallback
ruleServiceCallback returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServiceCallback'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceCallbackAccess().getServiceCallbackKeyword_0());
		}
		otherlv_1='BufferSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getServiceCallbackAccess().getBufferSizeKeyword_1());
		}
		(
			(
				lv_bufferSize_2_0=RULE_INT
				{
					newLeafNode(lv_bufferSize_2_0, grammarAccess.getServiceCallbackAccess().getBufferSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"bufferSize",
						lv_bufferSize_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='CallbackName'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceCallbackAccess().getCallbackNameKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getServiceCallbackAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='service'
			{
				newLeafNode(otherlv_5, grammarAccess.getServiceCallbackAccess().getServiceKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceCallbackRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getServiceCallbackAccess().getServiceServiceCrossReference_5_1_0());
					}
				)
			)
		)?
		(
			otherlv_7='executedIn'
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceCallbackAccess().getExecutedInKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceCallbackRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getServiceCallbackAccess().getExecutedInExecutorCrossReference_6_1_0());
					}
				)
			)+
		)?
		(
			otherlv_9='CallBackExecutionTime'
			{
				newLeafNode(otherlv_9, grammarAccess.getServiceCallbackAccess().getCallBackExecutionTimeKeyword_7_0());
			}
			(
				(
					lv_executionTime_10_0=RULE_INT
					{
						newLeafNode(lv_executionTime_10_0, grammarAccess.getServiceCallbackAccess().getExecutionTimeINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceCallbackRule());
						}
						setWithLastConsumed(
							$current,
							"executionTime",
							lv_executionTime_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getServiceCallbackAccess().getLeftCurlyBracketKeyword_8());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getServiceCallbackAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleClientCallback
entryRuleClientCallback returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClientCallbackRule()); }
	iv_ruleClientCallback=ruleClientCallback
	{ $current=$iv_ruleClientCallback.current; }
	EOF;

// Rule ClientCallback
ruleClientCallback returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ClientCallback'
		{
			newLeafNode(otherlv_0, grammarAccess.getClientCallbackAccess().getClientCallbackKeyword_0());
		}
		otherlv_1='BufferSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getClientCallbackAccess().getBufferSizeKeyword_1());
		}
		(
			(
				lv_bufferSize_2_0=RULE_INT
				{
					newLeafNode(lv_bufferSize_2_0, grammarAccess.getClientCallbackAccess().getBufferSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClientCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"bufferSize",
						lv_bufferSize_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='CallbackName'
		{
			newLeafNode(otherlv_3, grammarAccess.getClientCallbackAccess().getCallbackNameKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getClientCallbackAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClientCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='executedIn'
			{
				newLeafNode(otherlv_5, grammarAccess.getClientCallbackAccess().getExecutedInKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClientCallbackRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getClientCallbackAccess().getExecutedInExecutorCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			otherlv_7='CallBackExecutionTime'
			{
				newLeafNode(otherlv_7, grammarAccess.getClientCallbackAccess().getCallBackExecutionTimeKeyword_6_0());
			}
			(
				(
					lv_executionTime_8_0=RULE_INT
					{
						newLeafNode(lv_executionTime_8_0, grammarAccess.getClientCallbackAccess().getExecutionTimeINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClientCallbackRule());
						}
						setWithLastConsumed(
							$current,
							"executionTime",
							lv_executionTime_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getClientCallbackAccess().getLeftCurlyBracketKeyword_7());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getClientCallbackAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleTimerCallback
entryRuleTimerCallback returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimerCallbackRule()); }
	iv_ruleTimerCallback=ruleTimerCallback
	{ $current=$iv_ruleTimerCallback.current; }
	EOF;

// Rule TimerCallback
ruleTimerCallback returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TimerCallback'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimerCallbackAccess().getTimerCallbackKeyword_0());
		}
		otherlv_1='BufferSize'
		{
			newLeafNode(otherlv_1, grammarAccess.getTimerCallbackAccess().getBufferSizeKeyword_1());
		}
		(
			(
				lv_bufferSize_2_0=RULE_INT
				{
					newLeafNode(lv_bufferSize_2_0, grammarAccess.getTimerCallbackAccess().getBufferSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimerCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"bufferSize",
						lv_bufferSize_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='CallbackName'
		{
			newLeafNode(otherlv_3, grammarAccess.getTimerCallbackAccess().getCallbackNameKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getTimerCallbackAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimerCallbackRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_5='executedIn'
			{
				newLeafNode(otherlv_5, grammarAccess.getTimerCallbackAccess().getExecutedInKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimerCallbackRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getTimerCallbackAccess().getExecutedInExecutorCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			otherlv_7='of'
			{
				newLeafNode(otherlv_7, grammarAccess.getTimerCallbackAccess().getOfKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimerCallbackRule());
						}
					}
					otherlv_8=RULE_STRING
					{
						newLeafNode(otherlv_8, grammarAccess.getTimerCallbackAccess().getOfSystemTimerCrossReference_6_1_0());
					}
				)
			)
		)?
		(
			otherlv_9='CallBackExecutionTime'
			{
				newLeafNode(otherlv_9, grammarAccess.getTimerCallbackAccess().getCallBackExecutionTimeKeyword_7_0());
			}
			(
				(
					lv_executionTime_10_0=RULE_INT
					{
						newLeafNode(lv_executionTime_10_0, grammarAccess.getTimerCallbackAccess().getExecutionTimeINTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTimerCallbackRule());
						}
						setWithLastConsumed(
							$current,
							"executionTime",
							lv_executionTime_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getTimerCallbackAccess().getLeftCurlyBracketKeyword_8());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getTimerCallbackAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleSystemTimer
entryRuleSystemTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemTimerRule()); }
	iv_ruleSystemTimer=ruleSystemTimer
	{ $current=$iv_ruleSystemTimer.current; }
	EOF;

// Rule SystemTimer
ruleSystemTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSystemTimerAccess().getPeriodicTimerParserRuleCall_0());
		}
		this_PeriodicTimer_0=rulePeriodicTimer
		{
			$current = $this_PeriodicTimer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSystemTimerAccess().getWalltimerParserRuleCall_1());
		}
		this_Walltimer_1=ruleWalltimer
		{
			$current = $this_Walltimer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePeriodicTimer
entryRulePeriodicTimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodicTimerRule()); }
	iv_rulePeriodicTimer=rulePeriodicTimer
	{ $current=$iv_rulePeriodicTimer.current; }
	EOF;

// Rule PeriodicTimer
rulePeriodicTimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPeriodicTimerAccess().getPeriodicTimerAction_0(),
					$current);
			}
		)
		otherlv_1='PeriodicTimer'
		{
			newLeafNode(otherlv_1, grammarAccess.getPeriodicTimerAccess().getPeriodicTimerKeyword_1());
		}
		otherlv_2='Period'
		{
			newLeafNode(otherlv_2, grammarAccess.getPeriodicTimerAccess().getPeriodKeyword_2());
		}
		(
			(
				lv_period_3_0=RULE_INT
				{
					newLeafNode(lv_period_3_0, grammarAccess.getPeriodicTimerAccess().getPeriodINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodicTimerRule());
					}
					setWithLastConsumed(
						$current,
						"period",
						lv_period_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='SystemTimerName'
		{
			newLeafNode(otherlv_4, grammarAccess.getPeriodicTimerAccess().getSystemTimerNameKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_STRING
				{
					newLeafNode(lv_name_5_0, grammarAccess.getPeriodicTimerAccess().getNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodicTimerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='from'
		{
			newLeafNode(otherlv_6, grammarAccess.getPeriodicTimerAccess().getFromKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPeriodicTimerRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getPeriodicTimerAccess().getFromTimerCallbackCrossReference_7_0());
				}
			)
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getPeriodicTimerAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicTimerAccess().getSystemtimerSystemTimerParserRuleCall_9_0());
				}
				lv_systemtimer_9_0=ruleSystemTimer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicTimerRule());
					}
					add(
						$current,
						"systemtimer",
						lv_systemtimer_9_0,
						"org.xtext.example.mydsl.MyDsl.SystemTimer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPeriodicTimerAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleWalltimer
entryRuleWalltimer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWalltimerRule()); }
	iv_ruleWalltimer=ruleWalltimer
	{ $current=$iv_ruleWalltimer.current; }
	EOF;

// Rule Walltimer
ruleWalltimer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWalltimerAccess().getWalltimerAction_0(),
					$current);
			}
		)
		otherlv_1='Walltimer'
		{
			newLeafNode(otherlv_1, grammarAccess.getWalltimerAccess().getWalltimerKeyword_1());
		}
		otherlv_2='ReleaseTimes'
		{
			newLeafNode(otherlv_2, grammarAccess.getWalltimerAccess().getReleaseTimesKeyword_2());
		}
		(
			(
				lv_releaseTimes_3_0=RULE_INT
				{
					newLeafNode(lv_releaseTimes_3_0, grammarAccess.getWalltimerAccess().getReleaseTimesINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWalltimerRule());
					}
					setWithLastConsumed(
						$current,
						"releaseTimes",
						lv_releaseTimes_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='SystemTimerName'
		{
			newLeafNode(otherlv_4, grammarAccess.getWalltimerAccess().getSystemTimerNameKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_STRING
				{
					newLeafNode(lv_name_5_0, grammarAccess.getWalltimerAccess().getNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWalltimerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='from'
		{
			newLeafNode(otherlv_6, grammarAccess.getWalltimerAccess().getFromKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWalltimerRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getWalltimerAccess().getFromTimerCallbackCrossReference_7_0());
				}
			)
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getWalltimerAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWalltimerAccess().getSystemtimerSystemTimerParserRuleCall_9_0());
				}
				lv_systemtimer_9_0=ruleSystemTimer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWalltimerRule());
					}
					add(
						$current,
						"systemtimer",
						lv_systemtimer_9_0,
						"org.xtext.example.mydsl.MyDsl.SystemTimer");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getWalltimerAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Rule ExecutorType
ruleExecutorType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SINGLETHREADED'
			{
				$current = grammarAccess.getExecutorTypeAccess().getSINGLETHREADEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getExecutorTypeAccess().getSINGLETHREADEDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='STATICSINGLETHREADED'
			{
				$current = grammarAccess.getExecutorTypeAccess().getSTATICSINGLETHREADEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getExecutorTypeAccess().getSTATICSINGLETHREADEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MULTITHREADED'
			{
				$current = grammarAccess.getExecutorTypeAccess().getMULTITHREADEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getExecutorTypeAccess().getMULTITHREADEDEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
